.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "HMALLOC_USABLE_SIZE" "3" "Apr, 2024" "HMSDK Programmer\[cq]s Manuals" ""
.hy
.SH NAME
.PP
hmalloc_usable_size - obtain size of block of memory allocated from
hmalloc pool
.SH SYNOPSIS
.PP
\f[B]#include <hmalloc.h>\f[R]
.PP
\f[B]size_t hmalloc_usable_size (void *\f[BI]ptr\f[B]);\f[R]
.SH DESCRIPTION
.PP
The \f[B]hmalloc_usable_size\f[R]() function returns the number of
usable bytes in the block pointed to by \f[I]ptr\f[R], a pointer to a
block of memory allocated by \f[B]hmalloc APIs\f[R] such as
\f[B]hmalloc\f[R](3).
.SH GLOSSARY
.SS HMALLOC APIS
.PP
The \f[B]hmalloc APIs\f[R] are heterogeneous memory allocation APIs
provided by \f[B]libhmalloc.so\f[R] such as \f[B]hmalloc\f[R](3),
\f[B]hcalloc\f[R](3), \f[B]hposix_memalign\f[R](3), \f[B]hmmap\f[R](3),
etc.
All the APIs defined in \f[B]hmalloc.h\f[R] are \f[B]hmalloc APIs\f[R].
.SS HMALLOC POOL
.PP
The \f[B]hmalloc pool\f[R] is specially managed memory areas that can be
optionally controlled by \f[B]hmctl\f[R](8) tool.
If target programs allocate memory using \f[B]hmalloc APIs\f[R], then
this area is mapped as \f[B]hmalloc pool\f[R].
This \f[B]hmalloc pool\f[R] has no effect if the target program runs
without \f[B]hmctl\f[R](8), but if it runs with \f[B]hmctl\f[R](8)
attached, then the memory policy of this area can be changed based on
the usage of \f[B]hmctl\f[R](8).
.SS HMCTL
.PP
The \f[B]hmctl\f[R](8) is a tool that controls heterogeneous memory
allocation policy.
That means it can change the memory policy of \f[B]hmalloc pool\f[R]
allocated by \f[B]hmalloc APIs\f[R] internally using \f[B]mmap\f[R](2)
and \f[B]mbind\f[R](2).
If \f[B]hmctl\f[R](8) is attached and
\f[B]-m\f[R]/\f[B]\[en]membind\f[R] or
\f[B]-p\f[R]/\f[B]\[en]preferred\f[R] option is given with a valid NUMA
node ID, then the \f[B]hmalloc pool\f[R] memory is allocated from the
target node with the given memory policy based on the usage of
\f[B]hmctl\f[R](8).
.SH RETURN VALUE
.PP
\f[B]hmalloc_usable_size\f[R]() returns the number of usable bytes in
the block of allocated memory pointed to by \f[I]ptr\f[R].
If \f[I]ptr\f[R] is NULL, 0 is returned.
.SH SEE ALSO
.PP
\f[B]hmctl\f[R](8), \f[B]hmalloc\f[R](3),
\f[B]malloc_usable_size\f[R](3)
.SH AUTHORS
Honggyu Kim <honggyu.kim@sk.com>, Yunjeong Mun <yunjeong.mun@sk.com>.
